version: '3'
services:
  nginx:
    build:
      context: ./docker-images/nginx/${NGINX_VERSION}
    ports:
      - 80:8000
      - 443:443
    links:
      - phpfpm
      - redis
    volumes:
      - ./src/app_data1:/var/www/html
      - ./src/sock_data1:/sock
      - ./src/nginx_log1:/var/log/nginx
    networks:
      - magento

  phpfpm:
    build:
      context: ./docker-images/php/${PHP_VERSION}
    links:
      - db1
      - mailhog
    volumes:
      - ./docker-images/php/${PHP_VERSION}/.composer:/var/www/.composer
      - ./docker-images/php/${PHP_VERSION}/xdebug.ini:/usr/local/etc/php/conf.d/xdebug-local.ini
      - ./src/app_data1:/var/www/html
      - ./src/phpfpm_log1:/var/log
      - ./src/sock_data1:/sock
    environment:
      PHP_IDE_CONFIG: "serverName=localhost"
    networks:
      - magento

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    volumes:
      - ./src/redis_data1:/data
    networks:
      - magento

#  cron:
#    build:
#      context: ./docker-images/php/${PHP_VERSION}
#    user: root
#    command: /usr/local/bin/cronstart
#    tty: true
#    links:
#      - db1
#      - elasticsearch1
#      - rabbitmq
#    volumes:
#      - ./src/app_data1:/var/www/html
#      - ./src/sock_data1:/sock
#    networks:
#      - magento

  db1:
    image: mysql:${MYSQL_VERSION}
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ./src/mysql_data1:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
      - magento

  elasticsearch1:
    image: elasticsearch:${ELASTICSEARCH_VERSION}
    environment:
      - cluster.name=es-cluster
      - discovery.type=single-node
    volumes:
      - ./src/es_data1:/usr/share/elasticsearch/data
      - ./src/es_log1:/var/log/elasticsearch
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - magento
 
  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION}
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - magento

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog
    restart: always
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - magento

  node:
    build: 
      context: ./docker-images/node/${NODE_VERSION}
    ports:
      - 3000:3000
    volumes:
      - ./src/node_data1/src:/app/src
    networks:
      - magento

networks:
  magento:
    driver: bridge
    ipam:
      config:
        - subnet: 10.231.123.0/16
